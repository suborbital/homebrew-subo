# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Subo < Formula
  desc "Suborbital CLI for building and deploying WebAssembly-based projects"
  homepage "https://suborbital.dev"
  version "0.5.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/suborbital/subo/archive/v0.5.3.tar.gz"
      sha256 "28bbda79ce593448fd40a419079e78f5a0ef2706125d9774f9e5e5ebb6005aeb"

      def install
        bin.install "subo"

        bash_output = Utils.safe_popen_read(bin/"subo", "completion", "bash")
        (bash_completion/"subo").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"subo", "completion", "zsh")
        (zsh_completion/"_subo").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"subo", "completion", "fish")
        (fish_completion/"subo.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/suborbital/subo/releases/download/v0.5.2/subo-v0.5.2-darwin-amd64.tar.gz"
      sha256 "2f4f9f371bf3b692777229277b26daab52d51931d68a9daa61b7e50e46bb47da"

      def install
        bin.install "subo"

        bash_output = Utils.safe_popen_read(bin/"subo", "completion", "bash")
        (bash_completion/"subo").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"subo", "completion", "zsh")
        (zsh_completion/"_subo").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"subo", "completion", "fish")
        (fish_completion/"subo.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/suborbital/subo/releases/download/v0.5.2/subo-v0.5.2-linux-amd64.tar.gz"
      sha256 "df926b21d4a2b6d7a9f4b1db11e59aff77192847d6fb985661cad90347c697e6"

      def install
        bin.install "subo"

        bash_output = Utils.safe_popen_read(bin/"subo", "completion", "bash")
        (bash_completion/"subo").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"subo", "completion", "zsh")
        (zsh_completion/"_subo").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"subo", "completion", "fish")
        (fish_completion/"subo.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/suborbital/subo/releases/download/v0.5.2/subo-v0.5.2-linux-arm64.tar.gz"
      sha256 "015f5d98705b66c20865fb3f6f6da92fc31a51424ecdc37ef8f906041f1c28f9"

      def install
        bin.install "subo"

        bash_output = Utils.safe_popen_read(bin/"subo", "completion", "bash")
        (bash_completion/"subo").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"subo", "completion", "zsh")
        (zsh_completion/"_subo").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"subo", "completion", "fish")
        (fish_completion/"subo.fish").write fish_output
      end
    end
  end

  test do
    assert_match "Subo CLI v#{version}", shell_output("#{bin}/subo --version")
  end
end
